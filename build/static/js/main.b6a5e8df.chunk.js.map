{"version":3,"sources":["services/notes.js","components/Note.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","services_notes","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","components_Notification","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b6a5e8df.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default {getAll, create, update}","import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>{note.content}<button onClick={toggleImportance}>{label}</button></li>\n  )\n}\n\nexport default Note","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport noteService from './services/notes'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const rows = () =>\n    notesToShow.map(note => <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />)\n\n  const addNote = (e) => {\n    e.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    }\n    \n    noteService\n      .post(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}